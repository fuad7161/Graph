//Author: Fuadul Hasan(fuadul202@gmail.com)
//BSMRSTU,Gopalganj
#include<bits/stdc++.h>
using namespace std;

//debug..........
#define error(args...) {vector<string>_v=split(#args,',');err(_v.begin(),args);cout<<endl;}
vector<string> split(const string &s, char c) {vector<string>v; stringstream ss(s); string x;while (getline(ss, x, c))v.emplace_back(x); return move(v);} void err(vector<string>::iterator it) {}
template<typename T, typename... Args>void err(vector<string>::iterator it, T a, Args...args) {cout << it->substr((*it)[0] == ' ', it->length()) << " = " << a << " "; err(++it, args...);}



const int Inf           = (int)2e9 + 5;
const int N             = 5e5 + 5;
const int maxN            = 1e6 + 5;

vector<int>g[N];
int in[N] , vis[N] , low[N];
int timer = 0;
set<pair<int,int>>ae;
void dfs(int node , int p){
    in[node] = low[node] = timer++;
    vis[node] = 1;
    for(int child : g[node]){
        if(p == child)continue;
        if(vis[child]){
            low[node] = min(low[node] , in[child]);
        }else{
            dfs(child , node);
            low[node] = min(low[node] , low[child]);
            if(low[child] > in[node]){
                if(node < child)ae.insert({node , child});
                else ae.insert({child , node});
            }
        }
    }
}

// int
int solve() 
{
    
    //Test

    
    int n , m;
    cin>>n >> m;
        
    for(int i=0;i<m;i++){
        int x,y;
        cin>>x>>y;
        g[x].push_back(y);
        g[y].push_back(x);
    }
    for(int i=0;i<n;i++){
        if(!vis[i]){
            dfs(i,-1);
        }
    }
    
    cout<<ae.size()<<" critical links"<<endl;
    for(auto i: ae){
        // if(i.first > i.second)swap(i.first , i.second);
        cout<<i.first <<" - "<<i.second<<endl;
    }

    return 0;
    //error();
}

// int
int main(){

    int test = 1;
    // cin>>test;
    while (test--)solve();return 0;
}

/*
I know who....
*/
